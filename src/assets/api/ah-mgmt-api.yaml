---
openapi: 3.0.3
info:
  title: announcement-help-management
  description: Announcement Help Management RS API
  version: 4.3.0-SNAPSHOT
tags:
  - name: AnnouncementInternal
  - name: AnnouncementV1
  - name: HelpItemInternal
  - name: HelpItemV1
paths:
  /internal/announcements:
    get:
      tags:
        - AnnouncementInternal
      description: Retrieve announcements
      operationId: getAnnouncements
      parameters:
        - name: appId
          in: query
          schema:
            type: string
        - name: endDateFrom
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: endDateTo
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: priority
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnnouncementPriorityType'
        - name: startDateFrom
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: startDateTo
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnnouncementStatus'
        - name: title
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnnouncementType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnouncementListItemDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - AnnouncementInternal
      description: Add announcement
      operationId: addAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateDTO'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetailItemDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /internal/announcements/applications:
    get:
      tags:
        - AnnouncementInternal
      description: Get all apps with at least one announcement
      operationId: getAllAppsWithAnnouncements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationDTO'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /internal/announcements/{id}:
    get:
      tags:
        - AnnouncementInternal
      description: Retrieve announcement by id
      operationId: getAnnouncementById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetailItemDTO'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - AnnouncementInternal
      description: Delete announcement
      operationId: deleteAnnouncementById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    patch:
      tags:
        - AnnouncementInternal
      description: Patch/update announcement
      operationId: updateAnnouncementById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementDetailItemDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetailItemDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /internal/applications:
    get:
      tags:
        - HelpItemInternal
      description: Get all apps with at least one help item defined
      operationId: getAllAppsWithHelpItems
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationDTO'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /internal/applications/helpItems:
    get:
      tags:
        - HelpItemInternal
      description: Get help items
      operationId: getHelpItemsForAllApps
      parameters:
        - name: appId
          in: query
          schema:
            type: string
        - name: baseUrl
          in: query
          schema:
            type: string
        - name: context
          in: query
          schema:
            type: string
        - name: helpItemId
          in: query
          schema:
            type: string
        - name: resourceUrl
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HelpItemListDTO'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /internal/applications/{appId}/helpItems:
    get:
      tags:
        - HelpItemInternal
      description: Get help items
      operationId: getHelpItems
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: appId
          in: query
          schema:
            type: string
        - name: baseUrl
          in: query
          schema:
            type: string
        - name: context
          in: query
          schema:
            type: string
        - name: helpItemId
          in: query
          schema:
            type: string
        - name: resourceUrl
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HelpItemListDTO'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - HelpItemInternal
      description: Add a new help item
      operationId: addHelpItem
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelpItemPOSTDTO'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpItemDetailDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - HelpItemInternal
      description: Delete all help items in app
      operationId: deleteAllHelpItemForApp
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /internal/applications/{appId}/helpItems/{id}:
    get:
      tags:
        - HelpItemInternal
      description: Retrieve help item detail info
      operationId: getHelpItemById
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpItemDetailDTO'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - HelpItemInternal
      description: Deletes the help item
      operationId: deleteHelpItemById
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    patch:
      tags:
        - HelpItemInternal
      description: Update/patch an existing help item
      operationId: updateHelpItemById
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelpItemDetailDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpItemDetailDTO'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /v1/applications/announcements:
    get:
      tags:
        - AnnouncementV1
      description: Get announcements
      operationId: getAnnouncementsByCriteriaV1
      parameters:
        - name: appId
          in: query
          schema:
            type: string
        - name: endDateFrom
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: endDateTo
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: pageNumber
          in: query
          schema:
            format: int32
            default: '0'
            type: integer
        - name: pageSize
          in: query
          schema:
            format: int32
            default: '100'
            type: integer
        - name: priority
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnnouncementPriorityType'
        - name: startDateFrom
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: startDateTo
          in: query
          schema:
            $ref: '#/components/schemas/OffsetDateTime'
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnnouncementStatus'
        - name: title
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnnouncementType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementPageResultDTOv1'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /v1/applications/{appId}/announcements:
    get:
      tags:
        - AnnouncementV1
      description: Retrieves active announcements for application
      operationId: getActiveAnnouncements
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnouncementListItemDTOv1'
  /v1/applications/{appId}/announcements/{id}:
    get:
      tags:
        - AnnouncementV1
      description: Retrieve announcement by Id
      operationId: getAnnouncementByIdV1
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementListItemDTOv1'
        '403':
          description: Not Authorized
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /v1/applications/{appId}/helpItems:
    post:
      tags:
        - HelpItemV1
      description: Add a new help item
      operationId: createHelpItem
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelpItemCreateUpdateDTOv1'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpItemDetailDTOv1'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
        '403':
          description: Not Authorized
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
  /v1/applications/{appId}/helpItems/{helpItemId}:
    get:
      tags:
        - HelpItemV1
      description: Retrieve help item detail info
      operationId: getHelpItemByHelpItemId
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: helpItemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpItemDetailDTOv1'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
    patch:
      tags:
        - HelpItemV1
      description: Update/patch an existing help item
      operationId: updateHelpItemByHelpItemId
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: helpItemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelpItemCreateUpdateDTOv1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpItemDetailDTOv1'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    AnnouncementCreateDTO:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        appId:
          minLength: 2
          type: string
        title:
          minLength: 2
          type: string
        content:
          type: string
        type:
          $ref: '#/components/schemas/AnnouncementType'
        priority:
          $ref: '#/components/schemas/AnnouncementPriorityType'
        status:
          $ref: '#/components/schemas/AnnouncementStatus'
        startDate:
          $ref: '#/components/schemas/OffsetDateTime'
        endDate:
          $ref: '#/components/schemas/OffsetDateTime'
    AnnouncementDetailItemDTO:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        appId:
          minLength: 2
          type: string
        title:
          minLength: 2
          type: string
        content:
          type: string
        type:
          $ref: '#/components/schemas/AnnouncementType'
        priority:
          $ref: '#/components/schemas/AnnouncementPriorityType'
        status:
          $ref: '#/components/schemas/AnnouncementStatus'
        startDate:
          $ref: '#/components/schemas/OffsetDateTime'
        endDate:
          $ref: '#/components/schemas/OffsetDateTime'
    AnnouncementDetailItemDTOv1:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        creationUser:
          type: string
        modificationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        modificationUser:
          type: string
        id:
          type: string
        title:
          type: string
        appId:
          type: string
        content:
          type: string
        type:
          $ref: '#/components/schemas/AnnouncementType'
        priority:
          $ref: '#/components/schemas/AnnouncementPriorityType'
        status:
          $ref: '#/components/schemas/AnnouncementStatus'
        startDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        endDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
    AnnouncementListItemDTO:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/AnnouncementType'
        priority:
          $ref: '#/components/schemas/AnnouncementPriorityType'
        status:
          $ref: '#/components/schemas/AnnouncementStatus'
        startDate:
          $ref: '#/components/schemas/OffsetDateTime'
        endDate:
          $ref: '#/components/schemas/OffsetDateTime'
        appId:
          type: string
    AnnouncementListItemDTOv1:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        appId:
          type: string
        type:
          $ref: '#/components/schemas/AnnouncementType'
        priority:
          $ref: '#/components/schemas/AnnouncementPriorityType'
        status:
          $ref: '#/components/schemas/AnnouncementStatus'
        startDate:
          $ref: '#/components/schemas/OffsetDateTime'
        endDate:
          $ref: '#/components/schemas/OffsetDateTime'
    AnnouncementPageResultDTOv1:
      description: PageResult DTOv1 for Announcements
      type: object
      properties:
        totalElements:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/AnnouncementDetailItemDTOv1'
    AnnouncementPriorityType:
      enum:
        - IMPORTANT
        - NORMAL
        - LOW
      type: string
    AnnouncementStatus:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
    AnnouncementType:
      enum:
        - EVENT
        - INFO
        - SYSTEM_MAINTENANCE
      type: string
    ApplicationDTO:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
    HelpItemCreateUpdateDTOv1:
      type: object
      properties:
        helpItemId:
          minLength: 2
          type: string
        context:
          type: string
        baseUrl:
          type: string
        resourceUrl:
          type: string
    HelpItemDetailDTO:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        helpItemId:
          minLength: 2
          type: string
        context:
          type: string
        baseUrl:
          type: string
        resourceUrl:
          type: string
        appId:
          type: string
    HelpItemDetailDTOv1:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        creationUser:
          type: string
        modificationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        modificationUser:
          type: string
        id:
          type: string
        helpItemId:
          minLength: 2
          type: string
        context:
          type: string
        baseUrl:
          type: string
        resourceUrl:
          type: string
        appId:
          type: string
    HelpItemListDTO:
      type: object
      properties:
        id:
          type: string
        helpItemId:
          type: string
        context:
          type: string
        baseUrl:
          type: string
        resourceUrl:
          type: string
        appId:
          type: string
    HelpItemPOSTDTO:
      type: object
      properties:
        helpItemId:
          minLength: 2
          type: string
        context:
          type: string
        baseUrl:
          type: string
        resourceUrl:
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
